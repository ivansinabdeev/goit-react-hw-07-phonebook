{"version":3,"sources":["components/Form/Form.module.css","components/ContactList/ContactList.module.css","components/Title/Title.module.css","redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Title/Title.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","getContacts","state","contacts","items","getFilterValue","filter","createSelector","allContacts","regExp","RegExp","contact","test","name","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","ContactForm","useSelector","dispatch","useDispatch","onSubmit","number","post","then","data","catch","error","addContact","useState","setName","setNumber","className","s","event","preventDefault","namesIsIn","reduce","acc","numbersIsIn","includes","alert","contactCheck","type","value","placeholder","onChange","currentTarget","button","ContactList","onDeleteContact","id","contactID","delete","map","buttonDelete","onClick","Filter","e","actions","target","Title","title","App","createReducer","payload","loading","_","action","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2d93f18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContact\":\"Form_addContact__CoPYs\",\"button\":\"Form_button__3T9St\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDelete\":\"ContactList_buttonDelete__1ql1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__1wo6g\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.items;\n\nexport const getFilterValue = (state) => state.contacts.filter;\n\nexport const getFilteredContactList = createSelector(\n  [getContacts, getFilterValue],\n  (allContacts, filter) => {\n    const regExp = new RegExp(filter, \"gi\");\n\n    if (filter) {\n      return allContacts.filter((contact) => regExp.test(contact.name));\n    }\n    return allContacts;\n  }\n);\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","import axios from \"axios\";\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./phonebook-actions\";\n\naxios.defaults.baseURL = \"http://localhost:3001\";\n\nexport const fetchContacts = () => async (dispatch) => {\n  dispatch(fetchContactRequest);\n\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  }\n};\n\nexport const addContact =\n  ({ name, number }) =>\n  (dispatch) => {\n    const contact = {\n      name,\n      number,\n    };\n\n    dispatch(addContactRequest());\n\n    axios\n      .post(\"/contacts\", contact)\n      .then(({ data }) => dispatch(addContactSuccess(data)))\n      .catch((error) => dispatch(addContactError(error)));\n  };\n\nexport const deleteContact = (contactID) => (dispatch) => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactID}`)\n    .then(() => dispatch(deleteContactSuccess(contactID)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from \"../../redux/phonebook/phonebook-selectors\";\nimport { addContact } from \"../../redux/phonebook/phonebook-operations\";\n\nimport s from \"./Form.module.css\";\n\nfunction ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const onSubmit = (name, number) => dispatch(addContact(name, number));\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const contactCheck = () => {\n    const namesIsIn = contacts.reduce(\n      (acc, contact) => [...acc, contact.name],\n      []\n    );\n    const numbersIsIn = contacts.reduce(\n      (acc, contact) => [...acc, contact.number],\n      []\n    );\n\n    if (namesIsIn.includes(name) || numbersIsIn.includes(number)) {\n      alert(`${name}${number} Already exist`);\n    }\n\n    if (name === \"\" || number === \"\") {\n      alert(\"Not enough data\");\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setName(\"\");\n    setNumber(\"\");\n    if (contactCheck()) {\n      return;\n    }\n\n    onSubmit(name, number);\n  };\n\n  return (\n    <form className={s.addContact} onSubmit={handleSubmit}>\n      <label>\n        Name:\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Вася Пупкин\"\n          onChange={(event) => setName(event.currentTarget.value)}\n        />\n      </label>\n\n      <label>\n        Number:\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"+123456789\"\n          onChange={(event) => setNumber(event.currentTarget.value)}\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from \"../../redux/phonebook/phonebook-selectors\";\nimport * as operations from \"../../redux/phonebook/phonebook-operations\";\n\nimport s from \"./ContactList.module.css\";\n\nfunction ContactList() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = (id) => dispatch(operations.deleteContact(id));\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <button\n            className={s.buttonDelete}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { getFilterValue } from \"../../redux/phonebook/phonebook-selectors\";\nimport * as actions from \"../../redux/phonebook/phonebook-actions\";\n\nconst Filter = () => {\n  const filter = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n\n  const onChange = (e) => {\n    dispatch(actions.changeFilter(e.target.value));\n  };\n  return (\n    <label>\n      Filter by name\n      <input type=\"text\" value={filter} onChange={onChange} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import s from \"./Title.module.css\";\n\nfunction Title({ title }) {\n  return <p className={s.title}>{title}</p>;\n}\nexport default Title;\n","import ContactForm from \"./components/Form/Form\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport Title from \"./components/Title/Title\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Title title=\"Phonebook\" />\n      <ContactForm />\n      <Title title=\"Contacts\" />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  changeFilter,\n} from \"../phonebook/phonebook-actions\";\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (state, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => true,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (state, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [fetchContactError]: (_, action) => action.payload,\n  [fetchContactRequest]: () => null,\n  [addContactRequest]: () => null,\n  [deleteContactRequest]: () => null,\n  [deleteContactError]: (_, action) => action.payload,\n  [addContactError]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nimport contactsReducer from \"./phonebook/phonebook-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts:\n      contactsReducer /* persistReducer(contactsPersistConfig, contactsReducer) */,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}